{"version":3,"sources":["logo.svg","Video.js","ResultView.js","App.js","reportWebVitals.js","index.js"],"names":["Video","state","showStore","showAd","myCallback","console","log","setState","playVideo","window","test","props","source","pauseVideo","refs","vidRef","pause","render","onClick","React","Component","result","className","style","maxWidth","paddingLeft","paddingTop","url","raw","dangerouslySetInnerHTML","__html","subtitle","snippet","configurationOptions","alwaysSearchOnInitialLoad","apiConnector","AppSearchAPIConnector","searchKey","engineName","endpointBase","cacheResponses","searchQuery","search_fields","result_fields","size","fallback","movie","clip","order","facets","type","autocompleteQuery","suggestions","types","documents","fields","initialState","resultsPerPage","sortField","sortDirection","App","useRef","handleKeyDown","event","undefined","current","src","play","useEffect","addEventListener","removeEventListener","SearchProvider","config","class","ref","playsinline","Layout","header","SearchBox","autocompleteSuggestions","bodyContent","Results","titleField","urlField","resultView","ResultView","sideContent","Sorting","label","sortOptions","name","value","direction","Facet","field","bodyHeader","PagingInfo","ResultsPerPage","bodyFooter","Paging","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c9e6f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","    import React from \"react\";\r\n\r\n\r\n    class Video extends React.Component {\r\n\t\t\r\n\t\t\r\n\tstate = {\r\n\r\n\t\tshowStore: false,\r\n\t\tshowAd: false\r\n\t};\r\n  \r\n  /*\r\n      componentDidMount = () => {\r\n        this.playVideo();\r\n      };\r\n\r\n      componentWillUnmount = () => {\r\n          this.pauseVideo();\r\n      };\r\n\r\n*/\r\n\r\n\t  myCallback = () => {\r\n\t  console.log('Video has ended');\r\n\t  //we can control if we hide in the end of playing\r\n\t  this.setState({ showStore: false });\r\n\t  // turn on ads figure\r\n\t  this.setState({ showAd: true });\r\n\t  }\r\n\r\n      playVideo = () => {\r\n        // You can use the play method as normal on your video ref\r\n\t\t\r\n\t\twindow.test = this.props.source\r\n\t\tconsole.log(window.test);\r\n\t\t\r\n\t\t////this.setState({ showStore: false });\r\n      };\r\n\r\n      pauseVideo = () => {\r\n        // Pause as well\r\n        this.refs.vidRef.pause();\r\n      };\r\n\r\n      render = () => {\r\n        return (\r\n          <div >\r\n\t\t   \r\n            <div>\r\n              <button onClick={this.playVideo}>\r\n                Play\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    }\r\n\r\n export default Video;","import React from \"react\";\r\nimport Video from \"./Video\";\r\n\r\n\r\n\r\n\r\nexport default ({ result}) => (\r\n\r\n\r\n   \r\n  <li className=\"sui-result\">\r\n    <div className=\"sui-result__header\">\r\n      <span\r\n        className=\"sui-result__title\"\r\n        // Snippeted results contain search term highlights with html and are\r\n        // 100% safe and santitized, so we dangerously set them here\r\n\t\t//comment out to not show the clip name, like test4.mp4\r\n        //dangerouslySetInnerHTML={{ __html: result.clip.raw }}\r\n      />\r\n\t  \r\n    </div>\r\n\t\r\n    <div className=\"sui-result__body\">\r\n      <div\r\n        className=\"sui-result__image\"\r\n        style={{\r\n          maxWidth: \"140px\",\r\n          paddingLeft: \"24px\",\r\n          paddingTop: \"10px\"\r\n        }}\r\n      >\r\n\r\n\r\n\t\t\t\r\n\t\t\t <Video source={result.url.raw}/>\r\n\t\t\t\t\t\t\r\n\t\t\t  </div>\r\n           \r\n\t\t\t  <ul className=\"sui-result__details\">\r\n\t\t\t\t<li>\r\n\t\t\t\t  <span className=\"sui-result__key\">subtitle</span>{\" \"}\r\n\t\t\t\t  <span\r\n\t\t\t\t\tclassName=\"sui-result__value\"\r\n\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t  __html: result.subtitle.snippet\r\n\t\t\t\t\t}}\r\n\t\t\t\t  />\r\n\t\t\t\t</li>\r\n\t\t\t  </ul>\r\n\t\t\t\r\n\t  \r\n\t  \r\n     </div>\r\n\t \r\n  </li>\r\n  \r\n\r\n  \r\n);\r\n","import logo from './logo.svg';\nimport './App.css';\n\n// Step #1, import Statements\nimport React,{ useRef, useEffect } from 'react'; \n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n//import { SearchProvider, Results, SearchBox } from \"@elastic/react-search-ui\";\nimport {\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Facet,\n  SearchProvider,\n  Results,\n  SearchBox,\n  Sorting\n} from \"@elastic/react-search-ui\";\n\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport ResultView from \"./ResultView\";\n\n//import PVideo from \"./PVideo\";\nimport Video from \"./Video\";\n\n//import StickyVideo from 'react-sticky-video';\n//import 'react-sticky-video/dist/index.css';\n\n\n// Step #2, The Connector\n\n\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-ijei4mxb5f2ggmt3y1mmdboy\",\n  engineName: \"crossflixtest2\",\n  endpointBase: \"https://dev-engine.ent.asia-northeast1.gcp.cloud.es.io\",\n  cacheResponses: false\n});\n\n\n\n// Step #3: Configuration Options\n\nconst configurationOptions = {\n  alwaysSearchOnInitialLoad: true,\n  apiConnector: connector,\n  searchQuery: {\n    search_fields: {\n      // 1. Search by subtitles\n      subtitle: {}\n    },\n    // 2. Results: name of the video game, its genre, publisher, scores, and platform.\n    result_fields: {\n      subtitle: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 75, // Limit the snippet to 75 characters.\n          fallback: true // Fallback to a \"raw\" result.\n        }\n      },\n      movie: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n\t  //clip: {\n      //  snippet: {\n      //    size: 50,\n      //    fallback: true\n      //  }\n      //},\n\t  clip: {\n        raw: {}\n      },\n\t  order: {\n        raw: {}\n      },\n\t  \n      url: {\n        raw: {}\n      }\n    },\n    // 3. Facet by scores, genre, publisher, and platform, which we'll use to build filters later.\n    facets: {\n      movie: { type: \"value\", size: 100 }\n    }\n  },\n  // 4 auto\n    autocompleteQuery: {\n    suggestions: {\n      types: {\n        documents: {\n          // Which fields to search for suggestions.\n          fields: [\"subtitle\"]\n        },\n        // How many suggestions appear.\n        //size: 5  //will cause error\n      }\n    }\n  },\n  //5 initial state\n  initialState: {\n                resultsPerPage: 5,\n\t\t\t\t//sortField:\"clip\",\n\t\t\t\tsortField:\"order\",\n\t\t\t\tsortDirection:\"asc\",\n            }\n};\n\n\n \n \n\n\n// Step #4, SearchProvider: The Finishing Touches.\n\nexport default function App() {\n \n  \n const vidRef = useRef();\n\n\tconst handleKeyDown = (event) => {\n\t\tconsole.log('clicked');\n\t\t//vidRef.current.src = window.test;\n\t\tif (window.test!==undefined){\n\t\t\tvidRef.current.src = window.test;\n\t\t\tvidRef.current.play();\n\t\t\twindow.test = undefined;\n\t\t}\n\t\t\n\t};\n\n\tReact.useEffect(() => {\n\twindow.addEventListener('click', handleKeyDown);\n\n\t// cleanup this component\n\treturn () => {\n\t  window.removeEventListener('click', handleKeyDown);\n\t};\n\t}, []);\n\t\n\t\n\t//\t<div>\n\t//\t    <video width=\"100%\" height=\"auto\" \n    //          ref={vidRef}\n    //          src=\"https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=8,15\"\n\t//\t\t  //src={this.props.source}\n    //          type=\"video/mp4\"\n    //        />\n\t\t\n\t//\t</div>\t\n  \n  \n  return (\n    <SearchProvider config={configurationOptions}>\n      <div className=\"App\">\n \n\t\t<div>\n\t\t    <video class=\"myvideo\"\n              ref={vidRef}\n              src=\"https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=8,15\"\n\t\t\t  //src={this.props.source}\n              type=\"video/mp4\"\n\t\t\t  x5-playsinline=\"\" playsinline=\"\" webkit-playsinline=\"\"\n            />\n\t\t\n\t\t</div>\n\t\t\n\t\t\n\t\t<Layout\n\t\t  //header={<SearchBox />}\n\t\t  //header={<SearchBox />}\n\t\t  header={<SearchBox autocompleteSuggestions={true} />}\n\t\t  \n\t\t \n\t\t   bodyContent={\n\t\t\t   <div className=\"center-col\">\n\t\t\t   <Results titleField=\"movie\" urlField=\"url\"  resultView={ResultView}   />\n\t\t\t   </div>\n\t\t\t   }\n\t\t \n\t\t  \n\t\t  //bodyContent={<Results titleField=\"movie\" urlField=\"url\"  />}\n\t\t  sideContent={\n\t\t\t<div>\n\t\t\t  <Sorting\n\t\t\t\tlabel={\"Sort by\"}\n\t\t\t\tsortOptions={[\n\t\t\t\t  {\n\t\t\t\t\tname: \"order\",\n\t\t\t\t\tvalue: \"order\",\n\t\t\t\t\tdirection: \"asc\"\n\t\t\t\t  },\n\t\t\t\t{\n\t\t\t\t\tname: \"Relevance\",\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tdirection: \"\"\n\t\t\t\t  }  \n\n\n\t\t\t\t]}\n\t\t\t  />\n\t\t\t  <Facet field=\"movie\" label=\"movie\" />\n\t\t\t</div>\n\t\t  }\n\t\t  bodyHeader={\n\t\t\t<>\n\t\t\t  <PagingInfo />\n\t\t\t  <ResultsPerPage />\n\t\t\t</>\n\t\t  }\n\t\t  bodyFooter={<Paging />}\n\t\t/>\n\t\t\n\t\t\n      </div>\n    </SearchProvider>\n  );\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}