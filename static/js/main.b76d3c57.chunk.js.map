{"version":3,"sources":["logo.svg","Video.js","ResultView.js","App.js","reportWebVitals.js","index.js"],"names":["Video","state","showStore","myCallback","console","log","setState","playVideo","refs","vidRef","play","pauseVideo","pause","render","style","display","onEnded","ref","src","props","source","type","onClick","React","Component","result","className","maxWidth","paddingLeft","paddingTop","url","raw","dangerouslySetInnerHTML","__html","subtitle","snippet","configurationOptions","alwaysSearchOnInitialLoad","apiConnector","AppSearchAPIConnector","searchKey","engineName","endpointBase","cacheResponses","searchQuery","search_fields","result_fields","size","fallback","movie","clip","facets","autocompleteQuery","suggestions","types","documents","fields","initialState","resultsPerPage","App","myRef","useRef","SearchProvider","config","Layout","header","SearchBox","autocompleteSuggestions","bodyContent","Results","titleField","urlField","resultView","ResultView","sideContent","Sorting","label","sortOptions","name","value","direction","Facet","field","bodyHeader","PagingInfo","ResultsPerPage","bodyFooter","Paging","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b76d3c57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","    import React from \"react\";\r\n\t\r\n    class Video extends React.Component {\r\n\t\t\r\n\t\t\r\n\tstate = {\r\n\r\n\t\tshowStore: false\r\n\r\n\t};\r\n  \r\n  /*\r\n      componentDidMount = () => {\r\n        this.playVideo();\r\n      };\r\n\r\n      componentWillUnmount = () => {\r\n          this.pauseVideo();\r\n      };\r\n\r\n*/\r\n\r\n\t  myCallback = () => {\r\n\t  console.log('Video has ended');\r\n\t  this.setState({ showStore: false });\r\n\t  }\r\n\r\n      playVideo = () => {\r\n        // You can use the play method as normal on your video ref\r\n\t\tconsole.log(this.state.showStore);\r\n\t\tthis.setState({ showStore: true });\r\n\t\tconsole.log(this.state.showStore);\r\n\t\t\r\n        this.refs.vidRef.play();\r\n\t\t//this.setState({ showStore: false });\r\n      };\r\n\r\n      pauseVideo = () => {\r\n        // Pause as well\r\n        this.refs.vidRef.pause();\r\n      };\r\n\r\n      render = () => {\r\n        return (\r\n          <div >\r\n\t\t   <div style={{display: this.state.showStore? 'block':'none' }}>\r\n            <video onEnded={this.myCallback}\r\n              ref=\"vidRef\"\r\n              //src=\"https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=8,15\"\r\n\t\t\t  src={this.props.source}\r\n              type=\"video/mp4\"\r\n            />\r\n\t\t   </div>\r\n\t\t   \r\n            <div>\r\n              <button onClick={this.playVideo}>\r\n                Play\r\n              </button>\r\n             \r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    }\r\n\r\n export default Video;","import React from \"react\";\r\nimport Video from \"./Video\";\r\n\r\n//const playVideo(val) {\r\n//\t alert(val);\r\n\t//$(\"#sample_video\")[0].src += \"?autoplay=1\";\r\n\t//$(\"#sample_video\")[0].src = \"https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=1,15\";\r\n\t//$(\"#sample_video\")[0].src = val;\r\n\t//$('#sample_video').trigger('play');\r\n//}\r\n\r\n\r\n\r\n const playVideo = (e) =>{\r\n\t//alert(e);\r\n\t\r\n    console.log(\"hello you\");\r\n    console.log(e);\r\n\t\r\n\t//this.refs.ample_video[0].src = val;\r\n\t//this.refs.sample_video.trigger('play');\r\n\t//ref=e;\r\n}\r\n\r\n\r\n //   <button onClick={function(){playVideo('https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=1,15')}}>\r\n //       Play Video\r\n //    </button>\r\n\r\n//style={{display: { this.state.showStore ? 'block' : 'none'} }}\r\n\r\nexport default ({ result}) => (\r\n\r\n\r\n\r\n  <li className=\"sui-result\">\r\n    <div className=\"sui-result__header\">\r\n      <span\r\n        className=\"sui-result__title\"\r\n        // Snippeted results contain search term highlights with html and are\r\n        // 100% safe and santitized, so we dangerously set them here\r\n\t\t//comment out to not show the clip name, like test4.mp4\r\n        //dangerouslySetInnerHTML={{ __html: result.clip.raw }}\r\n      />\r\n    </div>\r\n    <div className=\"sui-result__body\">\r\n      <div\r\n        className=\"sui-result__image\"\r\n        style={{\r\n          maxWidth: \"140px\",\r\n          paddingLeft: \"24px\",\r\n          paddingTop: \"10px\"\r\n        }}\r\n      >\r\n\r\n\r\n\t\r\n\t <Video source={result.url.raw}/>\r\n        \t\t\r\n      </div>\r\n\r\n\t  <ul className=\"sui-result__details\">\r\n        <li>\r\n          <span className=\"sui-result__key\">subtitle</span>{\" \"}\r\n          <span\r\n            className=\"sui-result__value\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: result.subtitle.snippet\r\n            }}\r\n          />\r\n        </li>\r\n\t  </ul>\r\n\t  \r\n\t  \r\n    </div>\r\n  </li>\r\n);\r\n","import logo from './logo.svg';\nimport './App.css';\n\n// Step #1, import Statements\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n//import { SearchProvider, Results, SearchBox } from \"@elastic/react-search-ui\";\nimport {\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Facet,\n  SearchProvider,\n  Results,\n  SearchBox,\n  Sorting\n} from \"@elastic/react-search-ui\";\n\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport ResultView from \"./ResultView\";\nimport { useRef } from 'react';\nimport Video from \"./Video\";\n\n\n\n\n// Step #2, The Connector\n\n\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-ijei4mxb5f2ggmt3y1mmdboy\",\n  engineName: \"crossflixtest2\",\n  endpointBase: \"https://dev-engine.ent.asia-northeast1.gcp.cloud.es.io\",\n  cacheResponses: false\n});\n\n\n\n// Step #3: Configuration Options\n\nconst configurationOptions = {\n  alwaysSearchOnInitialLoad: true,\n  apiConnector: connector,\n  searchQuery: {\n    search_fields: {\n      // 1. Search by subtitles\n      subtitle: {}\n    },\n    // 2. Results: name of the video game, its genre, publisher, scores, and platform.\n    result_fields: {\n      subtitle: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 75, // Limit the snippet to 75 characters.\n          fallback: true // Fallback to a \"raw\" result.\n        }\n      },\n      movie: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n\t  //clip: {\n      //  snippet: {\n      //    size: 50,\n      //    fallback: true\n      //  }\n      //},\n\t  clip: {\n        raw: {}\n      },\n      url: {\n        raw: {}\n      }\n    },\n    // 3. Facet by scores, genre, publisher, and platform, which we'll use to build filters later.\n    facets: {\n      movie: { type: \"value\", size: 100 }\n    }\n  },\n  // 4 auto\n    autocompleteQuery: {\n    suggestions: {\n      types: {\n        documents: {\n          // Which fields to search for suggestions.\n          fields: [\"subtitle\"]\n        },\n        // How many suggestions appear.\n        //size: 5  //will cause error\n      }\n    }\n  },\n  //5 initial state\n  initialState: {\n                resultsPerPage: 5,\n\t\t\t\t//sortField:\"clip\"\n            }\n};\n\n\n \n \n\n\n// Step #4, SearchProvider: The Finishing Touches.\n\nexport default function App() {\n const myRef = useRef(\"https://media.geeksforgeeks.org/wp-content/uploads/20200107020629/sample_video.mp4#t=8,15\");\n \n\n  \n  \n  const playVideo = (e) =>{\n\t//alert(e);\n\t\n    console.log(\"hello you\");\n    console.log(e);\n\t\n\t//this.refs.ample_video[0].src = val;\n\t//this.refs.sample_video.trigger('play');\n\t//ref=e;\n}\n\n \n  return (\n    <SearchProvider config={configurationOptions}>\n      <div className=\"App\">\n\n \n\n\t\t<Layout\n\t\t  //header={<SearchBox />}\n\t\t  //header={<SearchBox />}\n\t\t  header={<SearchBox autocompleteSuggestions={true} />}\n\t\t   \n\t\t  bodyContent={<Results titleField=\"movie\" urlField=\"url\"  resultView={ResultView} ref={myRef}  />}\n\t\t  //bodyContent={<Results titleField=\"movie\" urlField=\"url\"  />}\n\t\t  sideContent={\n\t\t\t<div>\n\t\t\t  <Sorting\n\t\t\t\tlabel={\"Sort by\"}\n\t\t\t\tsortOptions={[\n\t\t\t\t  {\n\t\t\t\t\tname: \"clip\",\n\t\t\t\t\tvalue: \"clip\",\n\t\t\t\t\tdirection: \"asc\"\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tname: \"Relevance\",\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tdirection: \"\"\n\t\t\t\t  }\n\n\t\t\t\t]}\n\t\t\t  />\n\t\t\t  <Facet field=\"movie\" label=\"movie\" />\n\t\t\t</div>\n\t\t  }\n\t\t  bodyHeader={\n\t\t\t<>\n\t\t\t  <PagingInfo />\n\t\t\t  <ResultsPerPage />\n\t\t\t</>\n\t\t  }\n\t\t  bodyFooter={<Paging />}\n\t\t/>\n\t\t\n\t\t\n      </div>\n    </SearchProvider>\n  );\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}